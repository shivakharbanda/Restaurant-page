(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>u});var r=t(537),a=t.n(r),o=t(645),i=t.n(o),c=t(667),d=t.n(c),l=new URL(t(818),t.b),s=i()(a()),p=d()(l);s.push([e.id,"\nheader {\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    font-size: x-large;\n    color: white;\n    background-color: black;\n    padding: 15px;\n    margin: -10px;\n    margin-bottom: 0px;\n}\n\nheader > a {\n    text-decoration: none;\n    color: inherit;\n    cursor: pointer;\n}\n\n.home {\n    height: 95vh;\n\n    \n    background-image: url("+p+");\n    background-repeat: no-repeat;\n   \n    /* Center and scale the image nicely */\n    background-position: center;\n    background-repeat: no-repeat;\n    display: grid;\n    grid-template-rows: repeat(4, 1fr);\n    grid-template-columns: 0.5fr 1fr 1fr 1fr;\n    margin-left: -5%;\n    margin-right: -5%;\n\n    \n}\n\n.text {\n    color: white;\n    font-size: x-large;\n    display: flex;\n    grid-column-start: 2;\n    grid-row-start: 2;\n    grid-column-end: 3;\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n    padding-right: 5%;\n    padding-left: 2%;\n}\n\n.text > img {\n    background-color: white;\n    border-radius: 10px;\n    object-fit: contain;\n}\n\n.order {\n    height: 50px;\n    width: 200px;\n    border: none;\n    border-radius: 50px;\n    align-self: center;\n    font-size: x-large;\n}\n\n.Menu {\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n}\n.menu-items {\n    display: flex;\n    grid-row-start: 2;\n    grid-column-start: 1;\n    grid-column-end: 4;\n    gap: 5px;\n}\n\n.menu-item {\n    border: 1px solid black;\n    border-radius: 5px;\n\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:";AACA;IACI,aAAa;IACb,6BAA6B;IAC7B,mBAAmB;IACnB,kBAAkB;IAClB,YAAY;IACZ,uBAAuB;IACvB,aAAa;IACb,aAAa;IACb,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;IACrB,cAAc;IACd,eAAe;AACnB;;AAEA;IACI,YAAY;;;IAGZ,yDAAqC;IACrC,4BAA4B;;IAE5B,sCAAsC;IACtC,2BAA2B;IAC3B,4BAA4B;IAC5B,aAAa;IACb,kCAAkC;IAClC,wCAAwC;IACxC,gBAAgB;IAChB,iBAAiB;;;AAGrB;;AAEA;IACI,YAAY;IACZ,kBAAkB;IAClB,aAAa;IACb,oBAAoB;IACpB,iBAAiB;IACjB,kBAAkB;IAClB,aAAa;IACb,sBAAsB;IACtB,kBAAkB;IAClB,iBAAiB;IACjB,gBAAgB;AACpB;;AAEA;IACI,uBAAuB;IACvB,mBAAmB;IACnB,mBAAmB;AACvB;;AAEA;IACI,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,mBAAmB;IACnB,kBAAkB;IAClB,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,qCAAqC;AACzC;AACA;IACI,aAAa;IACb,iBAAiB;IACjB,oBAAoB;IACpB,kBAAkB;IAClB,QAAQ;AACZ;;AAEA;IACI,uBAAuB;IACvB,kBAAkB;;AAEtB",sourcesContent:['\nheader {\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    font-size: x-large;\n    color: white;\n    background-color: black;\n    padding: 15px;\n    margin: -10px;\n    margin-bottom: 0px;\n}\n\nheader > a {\n    text-decoration: none;\n    color: inherit;\n    cursor: pointer;\n}\n\n.home {\n    height: 95vh;\n\n    \n    background-image: url("./banner.jpg");\n    background-repeat: no-repeat;\n   \n    /* Center and scale the image nicely */\n    background-position: center;\n    background-repeat: no-repeat;\n    display: grid;\n    grid-template-rows: repeat(4, 1fr);\n    grid-template-columns: 0.5fr 1fr 1fr 1fr;\n    margin-left: -5%;\n    margin-right: -5%;\n\n    \n}\n\n.text {\n    color: white;\n    font-size: x-large;\n    display: flex;\n    grid-column-start: 2;\n    grid-row-start: 2;\n    grid-column-end: 3;\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n    padding-right: 5%;\n    padding-left: 2%;\n}\n\n.text > img {\n    background-color: white;\n    border-radius: 10px;\n    object-fit: contain;\n}\n\n.order {\n    height: 50px;\n    width: 200px;\n    border: none;\n    border-radius: 50px;\n    align-self: center;\n    font-size: x-large;\n}\n\n.Menu {\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n}\n.menu-items {\n    display: flex;\n    grid-row-start: 2;\n    grid-column-start: 1;\n    grid-column-end: 4;\n    gap: 5px;\n}\n\n.menu-item {\n    border: 1px solid black;\n    border-radius: 5px;\n\n}'],sourceRoot:""}]);const u=s},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,a,o){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var c=0;c<this.length;c++){var d=this[c][0];null!=d&&(i[d]=!0)}for(var l=0;l<e.length;l++){var s=[].concat(e[l]);r&&i[s[0]]||(void 0!==o&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=o),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),a&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=a):s[4]="".concat(a)),n.push(s))}},n}},667:e=>{e.exports=function(e,n){return n||(n={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]|(%20)/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */"),i=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(i).concat([o]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var o={},i=[],c=0;c<e.length;c++){var d=e[c],l=r.base?d[0]+r.base:d[0],s=o[l]||0,p="".concat(l," ").concat(s);o[l]=s+1;var u=t(p),A={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==u)n[u].references++,n[u].updater(A);else{var m=a(A,r);r.byIndex=c,n.splice(c,0,{identifier:p,updater:m,references:1})}i.push(p)}return i}function a(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,a){var o=r(e=e||[],a=a||{});return function(e){e=e||[];for(var i=0;i<o.length;i++){var c=t(o[i]);n[c].references--}for(var d=r(e,a),l=0;l<o.length;l++){var s=t(o[l]);0===n[s].references&&(n[s].updater(),n.splice(s,1))}o=d}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},818:(e,n,t)=>{e.exports=t.p+"7d6e3d80b7abbc5ed7d2.jpg"}},n={};function t(r){var a=n[r];if(void 0!==a)return a.exports;var o=n[r]={id:r,exports:{}};return e[r](o,o.exports,t),o.exports}t.m=e,t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var r=n.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var e=t(379),n=t.n(e),r=t(795),a=t.n(r),o=t(569),i=t.n(o),c=t(565),d=t.n(c),l=t(216),s=t.n(l),p=t(589),u=t.n(p),A=t(426),m={};m.styleTagTransform=u(),m.setAttributes=d(),m.insert=i().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=s(),n()(A.Z,m),A.Z&&A.Z.locals&&A.Z.locals;const C=t.p+"4cf251c48450599b4073.png",f=t.p+"a03a28c558c0179174f7.jpg";function h(){let e=document.createElement("div");return e.appendChild(B()),e.appendChild(function(){let e=document.createElement("div");e.classList.add("Menu");let n=document.createElement("div");n.classList.add("menu-head");let t=document.createElement("h1"),r=document.createElement("h2");t.textContent="Menu",r.textContent=" Breakfast Items",n.appendChild(t),n.appendChild(r),e.appendChild(n),n.classList.add("menu-head");let a=document.createElement("div");a.classList.add("menu-items");let o=[{name:"Aloo Parantha",price:"₹80"},{name:"Gobhi Parantha",price:"₹70"},{name:"Mooli Parantha",price:"₹70"}];for(let e=0;e<3;e++){let n=document.createElement("div");n.classList.add("menu-item");let t=document.createElement("div");t.classList.add("details");let r=document.createElement("h3"),i=document.createElement("h4");r.textContent=o[e].name,i.textContent=o[e].price,t.appendChild(r),t.appendChild(i);let c=new Image;c.src=f,n.appendChild(c),n.appendChild(t),a.appendChild(n)}return e.appendChild(a),e}()),e}function g(){let e=document.createElement("div");return e.appendChild(B()),e.appendChild(function(){let e=document.createElement("div");e.classList.add("contact");let n=document.createElement("h1");n.textContent="Contact Us";let t=document.createElement("div");t.classList.add("contact-details");let r=document.createElement("h2");r.textContent="Address: Lorem ipsum dolor sit, amet consectetur adipisicing elit....";let a=document.createElement("h2");return a.textContent="Phone number: 98000000000",t.appendChild(r),t.appendChild(a),e.appendChild(n),e.appendChild(t),e}()),e}function B(){let e=document.createElement("header"),n=["Home","Menu","Contact"],t=document.querySelector(".content");for(let a=0;a<3;a++){var r=document.createElement("a");r.classList.add("header-links"),r.textContent=n[a],r.id=r.textContent,e.appendChild(r),r.addEventListener("click",(e=>{"Home"==e.target.id?(t.textContent="",t.appendChild(x())):"Menu"==e.target.id?(t.textContent="",t.appendChild(h())):"Contact"==e.target.id&&(t.textContent="",t.appendChild(g()))}))}return e}function x(){let e=document.createElement("div");return e.appendChild(B()),e.appendChild(function(){let e=document.createElement("div"),n=new Image;n.src=C;let t=document.createElement("p");t.textContent="Lorem ipsum dolor sit amet consectetur adipisicing elit. Sit, ad ut fugiat, saepe alias porro...";let r=document.createElement("button");r.textContent="ORDER NOW";let a=document.createElement("div");return a.appendChild(n),a.appendChild(t),a.appendChild(r),e.appendChild(a),e.classList.add("home"),r.classList.add("order"),a.classList.add("text"),e}()),e}document.querySelector(".content").appendChild(x())})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,